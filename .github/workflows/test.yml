name: Test

on:
  push:
    branches:
      - main
      - feature/automata_learning
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test-code:
    name: Test code
    runs-on: ubuntu-latest
    env:
      RES_PATH: /home/runner/work/unif-sys-disc/unif-sys-disc/resources
      SKG_RES_PATH: /home/runner/work/unif-sys-disc/unif-sys-disc/resources/skg_resources
      SEM_RES_PATH: /home/runner/work/unif-sys-disc/unif-sys-disc/resources/sem_resources
      LSHA_RES_PATH: /home/runner/work/unif-sys-disc/unif-sys-disc/resources/lsha_resources
      NEO4J_URI: ${{ secrets.NEO4J_URI }}
      NEO4J_USERNAME: ${{ secrets.NEO4J_USERNAME }}
      NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
      NEO4J_SCHEMA: ${{ secrets.NEO4J_SCHEMA }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Install Poetry
        run: pip install poetry
      - name: Install Graphviz
        run: |
          sudo apt-get update
          sudo apt-get install --yes graphviz graphviz-dev
      - name: Install dependencies
        run: poetry install --no-root
      - name: Check code syntax
        run: poetry run flake8 .
      - name: Check code format
        run: poetry run black --check .
      - name: Perform unit test
        run: poetry run pytest tests.py
